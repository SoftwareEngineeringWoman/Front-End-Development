import{i as e,_ as i,t,n as s,I as o,e as n,s as l,fK as h,C as a,ag as d,p as r,fl as p,c as u,x as c,ah as g,d as b,f as m,bT as _,Z as f,bl as w}from"./shell-cc43a7af.js";import{a as C,s as v}from"./rpl-dialog-5966640e.js";C(e`#shreddit-media-lightbox .media-lightbox-img{max-height:none}#shreddit-media-lightbox::part(panel){max-width:100svw;max-height:100svh;width:100svw;height:100svh;border-radius:0}`);let x=class extends l{constructor(){super(...arguments),this._isConnected=!1,this._push=h,this.pubsub=new a(this),this._gesture=null,this._isPinchGesture=!1,this.templateRef=d(),this.contentRef=d(),this._hideCloseButtonOnIdle=!1,this.disableAnimations=!1,this.isIdle=!1,this.lightboxOpenHandler=({element:e,attributes:i={}})=>{const{permalink:t}=i;if(t){let s;try{s=new URL(`${location.origin}${t}`),this._push(s.href,{onForwardNav:()=>this.showModal({element:e,attributes:i}),onBackNav:()=>this.dialog?.hide()})}catch(e){}}else this.showModal({element:e,attributes:i})},this.showModal=({element:e,attributes:i={}})=>{if(this.dialog?.open)return;const{hideCloseButtonOnIdle:t,onAfterClose:s}=i;this._hideCloseButtonOnIdle=t??!1,this._onAfterClose=s,this._originalParent=e,this.dialog?.showModal(),this.pubsub.publish(r.LightboxOpened)},this.onAfterShow=()=>{this.contentRef?.value?.replaceChildren(...this._originalParent?.children||[]),this._startIdleTimer(),this.isIdle=!1,this.templateRef?.value&&(this._gesture=new p(this.templateRef.value,{mouseSupport:!0}),this._gesture.on("swipeup",this._onSwipe),this._gesture.on("swipedown",this._onSwipe),this._gesture.on("pinch",(()=>{this._isPinchGesture=!0})),this._gesture.on("pinchend",(()=>{this._isPinchGesture=!1})))},this.lightboxCloseHandler=()=>{this.dialog?.open&&this.dialog?.hide()},this.onDialogHide=()=>{this.pubsub.publish(r.LightboxClosed),this.contentRef?.value?.children&&this._originalParent&&(this._originalParent.replaceChildren(...this.contentRef.value.children),this.contentRef.value.innerHTML=""),this._originalParent=void 0,this._hideCloseButtonOnIdle=!1,this._idleTimeout=void 0,this.isIdle=!1,window.navigation?.canGoBack&&window.navigation.back()},this.onAfterHide=()=>{this._onAfterClose&&(this._onAfterClose(),this._onAfterClose=void 0)},this._startIdleTimer=()=>{this._hideCloseButtonOnIdle&&(this._stopIdleTimer(),this._idleTimeout=window.setTimeout((()=>{this.isIdle=!0}),1500))},this._onSwipe=()=>{this._isPinchGesture||this.dialog?.hide()}}static get styles(){return[u]}connectedCallback(){super.connectedCallback();Array.from(document.getElementsByTagName("shreddit-media-lightbox")).some((e=>e._isConnected))||(this._isConnected=!0,this.pubsub.subscribe(r.LightboxOpen,this.lightboxOpenHandler,!1),this.pubsub.subscribe(r.LightboxClose,this.lightboxCloseHandler,!1))}firstUpdated(){this.dialog&&this.disableAnimations&&function(e){const i={keyframes:[],options:{duration:0}};["dialog.show","dialog.hide","dialog.denyClose","dialog.overlay.show","dialog.overlay.hide"].forEach((t=>{v(e,t,i)}))}(this.dialog)}disconnectedCallback(){super.disconnectedCallback(),this._isConnected&&(this.dialog?.open&&this.dialog?.hide(),this.pubsub.unsubscribe(r.LightboxOpen,this.lightboxOpenHandler),this.pubsub.unsubscribe(r.LightboxClose,this.lightboxCloseHandler),this._gesture?.destroy(),this._isConnected=!1)}_stopIdleTimer(){window.clearTimeout(this._idleTimeout),this._idleTimeout=void 0,this.isIdle=!1}render(){if(this._isConnected){const e=c`<div \n data-testid="lightbox-template" \n class="relative h-full w-full" \n @mousemove="${this._startIdleTimer}" \n @click="${this._startIdleTimer}" \n @keydown="${this._startIdleTimer}" \n ${g(this.templateRef)}\n>\n <div \n data-testid="lightbox-template-content" \n class="h-full w-full max-h-screen" \n ${g(this.contentRef)}\n></div>\n ${b({size:m.Large,appearance:"media",shape:"pill",attributes:{"data-testid":"close-button",className:"absolute top-sm right-sm duration-300 "+(this.isIdle?"opacity-0 invisible":"opacity-100"),"aria-label":"Close lightbox",onclick:()=>{this.dialog?.hide()}},children:_({size:f.Medium})})}\n </div>`;return c`\n <rpl-dialog \n dialog-id="${"shreddit-media-lightbox"}" \n @rpl-dialog:after-show="${this.onAfterShow}" \n @rpl-dialog:hide="${this.onDialogHide}" \n @rpl-dialog:after-hide="${this.onAfterHide}" \n .litTemplateChildren="${e}" \n>\n </rpl-dialog>\n `}return""}};i([s({type:Boolean,attribute:"disable-animations"})],x.prototype,"disableAnimations",void 0),i([t()],x.prototype,"isIdle",void 0),i([o("rpl-dialog")],x.prototype,"dialog",void 0),x=i([n("shreddit-media-lightbox")],x);let k=class extends l{constructor(){super(...arguments),this.handleClick=()=>{w(r.LightboxOpen,{element:this,attributes:{permalink:this.permalink}})},this.handleKeypress=e=>{"Enter"!==e.key&&"Space"!==e.key||w(r.LightboxOpen,{element:this,attributes:{permalink:this.permalink}})}}render(){return c`<slot @click="${this.handleClick}" @keypress="${this.handleKeypress}"></slot>`}};k.styles=[e`:host{cursor:pointer}`,u],i([s({type:String,attribute:"permalink"})],k.prototype,"permalink",void 0),k=i([n("shreddit-media-lightbox-listener")],k);
//# sourceMappingURL=media-lightbox-client-js-d6b9e662.js.map
