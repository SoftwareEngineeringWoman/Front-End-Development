import{q as t,_ as e,s,n,e as o,c as i,l as r,eH as a,x as c,b0 as m,r as l,j as d,t as h,ay as p,ag as u,S as f,a_ as v,eI as g,p as b,eJ as _,d as w,ao as y,Z as C,f as S,ah as k,eK as x,b_ as j,L as P,b7 as A,b8 as E,u as L,a7 as $,U as I,eL as T,aa as B,eM as D,eN as M,eO as V,g as q,I as O}from"./shell-cc43a7af.js";import{o as R}from"./shreddit-comment-7009f479.js";import{t as U}from"./throttle-cde4a556.js";import"./icon-admin-81d51f4b.js";import"./icon-link-post-fbb03c14.js";import"./icon-user-fcf20f0b.js";import{t as z}from"./comments-f74d1757.js";import"./shreddit-spoiler-fbd5f49e.js";import"./faceplate-render-98687c17.js";import{s as N}from"./index-6f1b0f36.js";import{B as F}from"./base-translator-eacf7a73.js";import"./shreddit-comment-badges-f1198483.js";import"./mod-notes-opener-111273c2.js";import{I as J}from"./icon-search-outline-4bb73346.js";import{S as H,a as K,b as W,c as Q,s as Z}from"./search-dynamic-id-9401b761.js";import"./reddit-feed-0a6cea6a.js";import"./search-dynamic-id-cache-controller-78ca8fb5.js";import"./faceplate-search-input-ef30d8a6.js";import"./faceplate-timeago-f7e8b978.js";import"./mention-node-94764cdf.js";import"./icon-delete-outline-376be535.js";import"./icon-edit-outline-06a8096b.js";import"./upload-to-s3-d23260d1.js";import"./comment-composer-host-8abbfd2c.js";import"./rte-toolbar-button-emote-0af0e31f.js";import"./reputation-recaptcha-1049195f.js";import"./load-lazy-script-with-nonce-39f6ea07.js";import"./dom-47572497.js";import"./composer-14b337a4.js";import"./sleep-a1fd43c3.js";import"./faceplate-progress-3c1f8826.js";import"./telemetry-event-struct-69015fe2.js";import"./common-ui-strings-3dd72634.js";import"./distinguished-tags-1617045d.js";import"./icon-lock-fill-b8912198.js";import"./icon-pin-fill-dda7d8c1.js";import"./mod-notes-5a7635f6.js";import"./icon-spoiler-outline-feee73ee.js";import"./faceplate-text-input-213f2294.js";const G=t(s);let X=class extends G{constructor(){super(...arguments),this.commentId="",this.parentCommentPermalink="",this.postPermalink=""}static get styles(){return[i,r(".single-comment-thread-toolbar {\n  align-items: center;\n  display: flex;\n  flex-flow: row nowrap;\n  font: var(--font-title-h6);\n  justify-content: space-between;\n  padding: 0.5rem 1rem;\n}\n")]}firstUpdated(){this.updateComplete.then((()=>{const t=this.getBoundingClientRect().top;window.scrollTo({top:t-48,behavior:"auto"})}))}handleSeeFullDiscussionLink(){const t=document.querySelector("shreddit-post");t&&this.trackEvent(a(t))}render(){if(!this.commentId)return;const t="Single comment thread",e="no-underline hover:no-underline visited:no-underline text-primary";return c`\n <div>\n <div class="single-comment-thread-toolbar text-neutral-content-weak">\n ${this.parentCommentPermalink?c` <a href="${this.parentCommentPermalink}" class="${e}"> ${t} </a> `:c` <span>${t}</span> `}\n <span class="flex-1 h-px mx-xs bg-tone-4" data-id="line"></span>\n <a \n href="${this.postPermalink}" \n class="${e}" \n @click="${this.handleSeeFullDiscussionLink}" \n>\n See full discussion\n </a>\n </div>\n </div>\n `}};e([n({type:String,attribute:"comment-id"})],X.prototype,"commentId",void 0),e([n({type:String,attribute:"parent-comment-permalink"})],X.prototype,"parentCommentPermalink",void 0),e([n({type:String,attribute:"post-permalink"})],X.prototype,"postPermalink",void 0),X=e([o("shreddit-comments-page-tools")],X);const Y=t(d(s));let tt=class extends Y{constructor(){super(...arguments),this.thingId="",this.postId="",this.subredditPrefixedName="",this.isTruncated=!1,this.totalComments=0,this.isProfilePost=!1,this.isReportingEnabled=!1,this.ui="mobile",this.shouldTrackCommentsTelemetry=!1,this.permalink="",this.author="",this.isAuthorDeleted=!1,this.initialViewStats={num_comments_viewed:0,comments_viewed_json:[],comments_viewed_list:[],num_comments_consumed:0,comments_consumed_json:[],comments_consumed_list:[]},this.view_stats=this.initialViewStats,this.correlation_id=p(),this.overflowActionsMenuRef=u(),this.scrollBlocker=new f(this),this._maxVisibleDepth=null,this.depthUpdated=null,this.flushEvents=()=>{const t=((t,e,s,n,o)=>{let i={};const r=m("post"),a=e.slice(0,1e3);return i={correlation_id:o,view_stats:{num_comments_viewed:t,comments_viewed_json:JSON.stringify(a),comments_viewed_list:s},post:{...r,number_comments:n}},l({source:"post",action:"view",noun:"comments"},i)})(this.view_stats.num_comments_viewed,this.view_stats.comments_viewed_json,this.view_stats.comments_viewed_list,this.totalComments,this.correlation_id),e=((t,e,s,n,o)=>{let i={};const r=m("post"),a=e.slice(0,1e3);return i={correlation_id:o,view_stats:{num_comments_consumed:t,comments_consumed_json:JSON.stringify(a),comments_consumed_list:s},post:{...r,number_comments:n},screen:{height:window?.screen.height,width:window?.screen.width}},l({source:"post",action:"consume",noun:"comments"},i)})(this.view_stats.num_comments_consumed,this.view_stats.comments_consumed_json,this.view_stats.comments_consumed_list,this.totalComments,this.correlation_id);this.trackEvent(t),this.trackEvent(e)},this.commentsViewedListener=t=>{this.updateCommentsViewedStats(t.detail)},this.commentsConsumedListener=t=>{this.updateCommentsConsumedStats(t.detail)},this.handleCloseOverflowActionsMenu=()=>{this.overflowActionsMenuRef.value?.close(),document.documentElement.removeEventListener("click",this.handleCloseOverflowActionsMenu),this.scrollBlocker.unblockPageScrolling()},this.handleCommentCreated=({parentThingId:t,body:e})=>{this.postId===t&&(this.querySelector("#next-comment")?.after(...v(e)),this.totalComments+=1)}}static get styles(){return[i,r(":host {\n  display: block;\n  background-color: var(--shreddit-content-background);\n  padding-bottom: var(--spacer-xs);\n}\n"),r(g)]}get maxVisibleDepth(){return null===this._maxVisibleDepth&&null===this.depthUpdated&&(this.depthUpdated=new Promise((t=>{requestAnimationFrame((()=>{const e=this.getMaxVisibleDepth();this._maxVisibleDepth=e,t(e)}))}))),this._maxVisibleDepth}getMaxVisibleDepth({containerWidth:t}={}){const e=this.querySelector(":scope > shreddit-comment")?.depth??0;t??(t=this.getBoundingClientRect().width);const s="mobile"===this.ui?232:320,n="mobile"===this.ui?18:32,o="mobile"===this.ui?4:10,i=Math.floor((t-s)/n);return Math.max(1,Math.min(i,o))+e}connectedCallback(){super.connectedCallback(),this.addEventListener(R,this.handleOpenOverflowActionsMenu),this.subscribe(b.CommentCreated,this.handleCommentCreated),this.resizeObserver=new ResizeObserver(U((t=>{let e=0;for(const s of t){const t=s.contentBoxSize.at(0)?.inlineSize;if(t){e=t;break}}if(0===e)return;const s=this.getMaxVisibleDepth({containerWidth:e});if(this._maxVisibleDepth!==s){this._maxVisibleDepth=s,this.depthUpdated=Promise.resolve(s);for(const t of this.querySelectorAll("shreddit-comment"))t.setVisibility(s)}}),128,!0)),this.resizeObserver.observe(this,{box:"content-box"}),this.shouldTrackCommentsTelemetry&&(this.addEventListener("comments-viewed-event",this.commentsViewedListener),this.addEventListener("comments-consumed-event",this.commentsConsumedListener),_((t=>{t?(this.resetViewStats(),this.correlation_id=p(),this.view_stats=this.initialViewStats):this.flushEvents()}),{immediate:!0}),window.addEventListener("beforeRoute",(()=>{this.flushEvents(),this.resetViewStats()})))}resetViewStats(){this.view_stats={num_comments_viewed:0,comments_viewed_json:[],comments_viewed_list:[],num_comments_consumed:0,comments_consumed_json:[],comments_consumed_list:[]}}updateCommentsViewedStats(t){return this.view_stats.comments_viewed_json.find((e=>e.comment_id===t?.detail.comment_id))||(this.view_stats.comments_viewed_json.push({comment_depth:t?.detail.comment_depth,comment_id:t?.detail.comment_id,comment_parent_id:t?.detail.comment_parent_id}),this.view_stats.comments_viewed_list.push(t?.detail.comment_id),this.view_stats.num_comments_viewed=this.view_stats.comments_viewed_json.length),t}updateCommentsConsumedStats(t){return this.view_stats.comments_consumed_json.find((e=>e.comment_id===t?.detail.comment_id))||(this.view_stats.comments_consumed_json.push({comment_depth:t?.detail.comment_depth,comment_id:t?.detail.comment_id,comment_parent_id:t?.detail.comment_parent_id}),this.view_stats.comments_consumed_list.push(t?.detail.comment_id),this.view_stats.num_comments_consumed=this.view_stats.comments_consumed_json.length),t}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener(R,this.handleOpenOverflowActionsMenu),this.unsubscribe(b.CommentCreated,this.handleCommentCreated),this.resizeObserver?.unobserve(this),this.resizeObserver?.disconnect(),this.removeEventListener("comments-viewed-event",this.commentsViewedListener),this.removeEventListener("comments-consumed-event",this.commentsConsumedListener)}showAllComments(){this.isTruncated=!1,this.trackEvent(z())}renderShredtopViewMoreCommentsButton(t){return w({attributes:{type:"button",className:"ml-sm xs:ml-0 font-semibold mt-md",onclick:t},appearance:"brand",shape:"pill",leadingIcon:y({size:C.Medium}),size:S.Small,children:"View more comments"})}renderTruncatedExpandButton(){return this.renderShredtopViewMoreCommentsButton(this.showAllComments)}renderContent(){return c`\n <section \n class="flex flex-col px-md xs:px-0 gap-md relative" \n aria-label="Comments" \n>\n <slot></slot>\n ${this.isTruncated?"":c`<slot name="truncated"></slot>`}\n </section>\n `}renderExpandButton(){return this.isTruncated?this.renderTruncatedExpandButton():""}render(){return c`\n ${this.renderContent()}\n <faceplate-dialog \n ${k(this.overflowActionsMenuRef)}\n class="overflow-actions-dialog" \n @click="${this.handleCloseOverflowActionsMenu}" \n>\n <faceplate-screen-reader-content id="overflow-actions-menu-label">\n Additional comment actions\n </faceplate-screen-reader-content>\n <ul class="overflow-actions-menu" aria-labelledby="overflow-actions-menu-label">\n <li>\n <a href="${this.permalink}">\n <icon-link-post aria-hidden="true" class="overflow-actions-icon"></icon-link-post>\n Share\n </a>\n </li>\n ${this.isProfilePost?"":c`\n <li>\n <a href="/${this.subredditPrefixedName}/">\n <icon-admin aria-hidden="true" class="overflow-actions-icon"></icon-admin>\n More from ${this.subredditPrefixedName}\n </a>\n </li>\n `}\n ${this.isAuthorDeleted?"":c`<li>\n <a href="/user/${this.author}/">\n <icon-user aria-hidden="true" class="overflow-actions-icon"></icon-user> ${this.author}'s profile\n </a>\n </li>`}\n ${this.isReportingEnabled?c`<li>\n <shreddit-overflow-report \n thingId="${this.thingId}" \n type="${x.COMMENT}" \n></shreddit-overflow-report>\n </li>`:""}\n <button \n class="button button-small button-plain block bg-tone-6 text-tone-3 mt-[10px] mx-auto mb-0 w-[calc(100%-20px)] max-w-full" \n>\n Close\n </button>\n </ul>\n </faceplate-dialog>\n ${this.renderExpandButton()}\n `}handleOpenOverflowActionsMenu({detail:{author:t,isAuthorDeleted:e,permalink:s,thingId:n}}){this.author=t,this.isAuthorDeleted=e,this.permalink=s,this.thingId=n,this.overflowActionsMenuRef.value?.showModal(),document.documentElement.addEventListener("click",this.handleCloseOverflowActionsMenu),this.scrollBlocker.blockPageScrolling()}};function et(t,e,s){const[n,o]=t?t.split("?"):"",i=new URLSearchParams(o);return e?(i.set("translated","1"),s&&i.set("pretranslation_language",s)):(i.delete("translated"),s&&i.delete("pretranslation_language")),i.toString()?n+"?"+decodeURIComponent(i.toString()):n}e([n({type:String})],tt.prototype,"thingId",void 0),e([n({type:String,attribute:"post-id"})],tt.prototype,"postId",void 0),e([n({type:String,attribute:"subreddit-prefixed-name"})],tt.prototype,"subredditPrefixedName",void 0),e([n({type:Boolean})],tt.prototype,"isTruncated",void 0),e([n({type:Number})],tt.prototype,"totalComments",void 0),e([n({type:Boolean})],tt.prototype,"isProfilePost",void 0),e([n({type:Boolean,attribute:"is-reporting-enabled"})],tt.prototype,"isReportingEnabled",void 0),e([n({type:String,attribute:"ui"})],tt.prototype,"ui",void 0),e([n({type:Boolean,attribute:"should-track-comments-telemetry"})],tt.prototype,"shouldTrackCommentsTelemetry",void 0),e([h()],tt.prototype,"permalink",void 0),e([h()],tt.prototype,"author",void 0),e([h()],tt.prototype,"isAuthorDeleted",void 0),tt=e([o("shreddit-comment-tree")],tt);const st="shreddit-comment";let nt=class extends F{constructor(){super(...arguments),this.mtSeoLanguage="",this.isLoadingTranslations=!1,this._partialRequestController=new j(this)}async onTranslationsEnabled(){this.toggleComments(!0)}async onTranslationsDisabled(){this.toggleComments(!1)}async toggleComments(t){if(t&&!this.isLoadingTranslations)this.enableCommentTranslations();else if(!t){this.querySelectorAll(st).forEach((t=>{t.removeAttribute("is-comment-translated")}))}!function(t,e){const s=document.querySelector("faceplate-partial#top-level-more-comments-partial");if(s){const n=et(s.src,t,e);s.setAttribute("src",n)}document.querySelectorAll('faceplate-partial[src*="more-comments"]')?.forEach((s=>{const n=s.getAttribute("src")||"";if(n){const o=et(n,t,e);s.setAttribute("src",o)}}))}(t,this.mtSeoLanguage),function(t,e){const s=document?.querySelectorAll('[id*="comments-permalink-"]');s?.forEach((s=>{const n=s.getAttribute("href");if(n){const o=et(n,t,e);s.setAttribute("href",o)}}))}(t,this.mtSeoLanguage)}async enableCommentTranslations(){const t=this.querySelectorAll(st),e=[];if(t.forEach((t=>{const s=t.getAttribute("thingid");null===t.getAttribute("is-comment-translated")&&s&&(null!==t.getAttribute("is-translation-fetched")?t.setAttribute("is-comment-translated","true"):null!==t.getAttribute("is-translatable")&&e.push(s))})),0===e.length)return;const s=await this.fetchCommentTranslations(e);if(!s)return;const n=v(s);this.injectCommentTranslations(n)}async fetchCommentTranslations(t){this.isLoadingTranslations=!0;const e={commentIds:t.toString()},s=`/svc/shreddit/translated-comment/?${N(e)}`,n=await this._partialRequestController.request(s);return this.isLoadingTranslations=!1,await(n?.text())}async injectCommentTranslations(t){t.map((t=>{const e=t.getAttribute("data-comment-id"),s=this.querySelector(`shreddit-comment[thingid=${e}]`);if(!s)return;const n=s.querySelector('div[slot="comment-translated"]'),o=t.querySelector(`#${e}-translated-post-rtjson-content`);n&&o&&(n.replaceChildren(o),s.setAttribute("is-translation-fetched","true"),this.translationContextValue.isTranslationActive&&s.setAttribute("is-comment-translated","true"))}))}render(){return c`<div><slot></slot></div>`}};e([n({type:String,attribute:"mt-seo-language"})],nt.prototype,"mtSeoLanguage",void 0),nt=e([o("comment-translator")],nt);class ot{constructor(){this.partial=null,this.loadAndReplaceContent=async({afterFailure:t,afterSuccess:e,wrapPartialElement:s=(t=>t),src:n,target:o})=>{const i=document.createElement("faceplate-partial");i.setAttribute("loading",P.Programmatic),i.setAttribute("src",n),i.setAttribute("class","block min-h-screen xs:min-h-[20rem]");const r=document.createElement("shreddit-loading");i.appendChild(r);const a=this.partial??document.getElementById(o),c=`${a.getBoundingClientRect().height}px`;i.style.minHeight=c,a.insertAdjacentElement("beforebegin",s(i)),a.remove(),this.partial=i;try{const t=new Promise(((t,e)=>{const s=t=>{this.partial!==i&&(t.stopImmediatePropagation(),t.stopPropagation()),e()};i.addEventListener("faceplate-error",s,{once:!0}),i.addEventListener("faceplate-alert",s,{once:!0})}));await Promise.race([t,i.load()]),this.partial=null;document.getElementById(o).style.minHeight=c,e?.()}catch{if(this.partial!==i)return;t?.()}}}}let it=class extends s{constructor(){super(...arguments),this.target="",this.path="",this.handleSortEvent=async t=>{const e=t.detail.selected;this.updateLocation({sort:e});const s=new URL(`${location.origin}${this.path}`);s.searchParams.set("sort",e.toLowerCase()),s.searchParams.set("inline-refresh","true");const n=s.toString().substring(location.origin.length);this.replaceContentController.loadAndReplaceContent({src:n,target:this.target,afterSuccess:()=>A(this,{message:"The comments are sorted successfully",options:{priority:E.assertive}}),afterFailure:()=>this.dispatchEvent(L("faceplate-alert",{level:$.error,message:"Failed to load the comments."}))})},this.replaceContentController=new ot}updateLocation({sort:t}){const e=new URL(location.href);e.searchParams.set("sort",t.toLowerCase()),history.replaceState({},"",e.toString())}connectedCallback(){super.connectedCallback(),this.querySelector("shreddit-sort-dropdown")?.addEventListener("comment-sort",this.handleSortEvent)}disconnectedCallback(){super.disconnectedCallback(),this.querySelector("shreddit-sort-dropdown")?.removeEventListener("comment-sort",this.handleSortEvent)}render(){return c`<slot></slot>`}};e([n({type:String})],it.prototype,"target",void 0),e([n({type:String})],it.prototype,"path",void 0),it=e([o("shreddit-comments-sort-dropdown")],it);let rt=class extends(t(s)){constructor(){super(...arguments),this.target="",this.path="",this.showOnLoad=!1,this.open=this.showOnLoad,this.commentSearchActive=this.showOnLoad,this.replaceContentController=new ot,this.handlePdpCommentSearch=I((async()=>{this.commentSearchActive=!0;const t=this.searchInput?.value??"",e={conversationId:K.get(T.PdpCommentSearchBar),impressionId:H.getUUID(),query:t,scope:{type:D.PDP,path:this.path},cursor:{},type:M.Comments};this.addSearchParamsToUrl(e);const s=new URLSearchParams({...Z(e)});this.trackEvent(l({source:"search",action:"click",noun:"full_search_button"},this.searchTelemetryData));const n=document.createElement("span");n.id=this.target,this.replaceContentController.loadAndReplaceContent({src:`/svc/shreddit${this.path}pdp-comment-search-results?${s.toString()}`,target:this.target,wrapPartialElement:t=>(n.appendChild(t),n)})}),300),this.handleKeyDown=t=>{H.update(T.PdpCommentSearchBar),"Enter"===t.key&&this.handlePdpCommentSearch()}}get searchTelemetryData(){const t=this.searchInput?.value??"";return{action_info:{page_type:B.PostDetail},search:{conversation_id:K.get(T.PdpCommentSearchBar),impression_id:H.get(T.PdpCommentSearchBar),query:t,query_id:W.get({query:t,scope:{type:D.PDP,path:this.path},type:M.Comments},T.PdpCommentSearchBar),origin_element:V.CommentSearchBar,origin_page_type:B.PostDetail}}}addSearchParamsToUrl(t){const e=location.href,s=new URL(e);s.searchParams.set(Q.Query,t.query),s.searchParams.set(Q.Type,t.type),s.searchParams.set(Q.ConversationId,t.conversationId??K.get(T.PdpCommentSearchBar)),s.searchParams.set(Q.ImpressionId,t.impressionId??H.getUUID());const n=s.toString();n!==e&&history.replaceState({},"",n)}updated(t){t.has("open")&&this.open&&this.searchInput?.innerInput?.focus()}render(){return c` <search-dynamic-id-cache-controller \n search-telemetry-source="${T.PdpCommentSearchBar}" \n data-faceplate-tracking-context="${JSON.stringify(this.searchTelemetryData)}" \n><faceplate-tracker source="search" action="click" noun="search_bar">\n <faceplate-tooltip \n class="${q({hidden:this.open})}" \n appearance="inverted" \n>${w({appearance:"plain",size:S.Medium,shape:"pill",attributes:{"aria-controls":"pdp-comment-search-form","aria-expanded":`${this.open}`,className:"ml-[6px]",id:"expand-search-button",onclick:()=>{this.open=!0},slot:"trigger",type:"button"},screenReaderContent:"Expand comment search",leadingIcon:J({size:C.Small})})}\n Search Comments\n </faceplate-tooltip>\n </faceplate-tracker>\n\n <form \n class="${q({hidden:!this.open})}" \n id="pdp-comment-search-form" \n @submit="${this.handlePdpCommentSearch}" \n>\n <faceplate-search-input \n class="m-0 bg-secondary-background rounded-full focus-within:bg-neutral-background-strong w-full" \n placeholder="Search Comments" \n @keydown="${this.handleKeyDown}" \n @blur="${()=>{this.commentSearchActive||(this.open=!1),H.update(T.PdpCommentSearchBar)}}" \n></faceplate-search-input>\n </form>\n </search-dynamic-id-cache-controller>`}};rt.styles=[i],e([n({type:String})],rt.prototype,"target",void 0),e([n({type:String})],rt.prototype,"path",void 0),e([n({attribute:"show-on-load",type:Boolean})],rt.prototype,"showOnLoad",void 0),e([O("faceplate-search-input")],rt.prototype,"searchInput",void 0),e([h()],rt.prototype,"open",void 0),e([h()],rt.prototype,"commentSearchActive",void 0),rt=e([o("pdp-comment-search-input")],rt);
//# sourceMappingURL=comment-forest-client-js-ed46ca1b.js.map
